plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.4'
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    all {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

group = 'moyeora'
version = '0.0.1-SNAPSHOT'

dependencies {
    implementation 'com.auth0:java-jwt:4.0.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:stomp-websocket:2.3.4'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //AWS S3 API 라이브러리
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.688'

    //kafka
    implementation 'org.springframework.kafka:spring-kafka'

    //elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // Kafka에 로그를 전송하기 위해 Logback에 Kafka Appender를 추가
    implementation 'com.github.danielwegener:logback-kafka-appender:0.2.0-RC2'

    // Logstash에서 처리할 수 있는 JSON 형식으로 로그 메시지를 인코딩
    implementation 'net.logstash.logback:logstash-logback-encoder:6.2'

    ///modelMapper
    implementation 'org.modelmapper:modelmapper:3.1.0'

    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    //aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testImplementation 'org.springframework.security:spring-security-test'

    // log4j 2.x 라이브러리
    //implementation 'org.apache.logging.log4j:log4j-core:2.23.1'

    //부트페이 라이브러리
    implementation 'io.github.bootpay:backend:+'
    //json 파싱
    implementation 'org.json:json:20240303'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.register('wrapper', Wrapper) {
    gradleVersion = '8.5'
}

tasks.register("prepareKotlinBuildScriptModel"){}