<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moyeora.myapp.dao.UserDao">

  <resultMap id="UserMap" type="User">
    <id column="user_no" property="no"/>
    <result column="name" property="name" />
    <result column="pwd" property="pwd"/>
    <result column="address" property="address"/>
    <result column="phone" property="phone"/>
    <result column="email" property="email"/>
    <result column="nickname" property="nickname"/>
    <result column="birth" property="birth"/>
    <result column="gender" property="gender"/>
    <result column="grade" property="grade"/>
    <result column="login_type" property="loginType"/>
    <result column="created_at" property="createdAt"/>
    <result column="profile" property="profile"/>
    <result column="manner_point" property="mannerPoint"/>
    <result column="photo" property="photo"/>
    <result column="address_detail" property="addressDetail"/>
    <result column="stop_date" property="stopDate"/>
  </resultMap>



  <insert id="add" parameterType="User">
    insert into users(name,pwd,address,phone,email,nickname,birth,gender,profile,photo,manner_point)
    values(#{name},#{pwd},#{address},#{phone},#{email},#{nickname},#{birth},#{gender},#{profile},#{photo},36)
  </insert>

<select id="findBy" resultMap="UserMap" parameterType="int">
    select
        name,
        address,
        phone,
        email,
        nickname,
        birth,
        gender,
        grade,
        created_at,
        profile,
        manner_point,
        photo,
        address_detail
    from
        users
    where
        user_no = 38;
</select>

  <insert id="add2" parameterType="list">
    insert into member_tags(user_no,tag_no)
    values(#{no},#{no})
  </insert>

  <delete id="delete" parameterType="int">
    delete from users where user_no=#{value}
  </delete>

  <select id="findAll" resultMap="UserMap">
    select
    user_no,
    nickname,
    email,
    created_at
    from
    user_no
  </select>

  <select id="findByNo" resultMap="UserMap" parameterType="int">
    select
    user_no,
    email,
    name,
    created_at
    from
    users
    where
    user_no=#{value}
  </select>

  <select id="findByEmail" resultMap="UserMap" parameterType="string">
    select
    user_no,
    email,
    pwd,
    name
    from
    users
    where
    email=#{email}
  </select>

  <update id="update" parameterType="User">
  update users set
  email=#{email},
  nickname=#{nickname},
  phone=#{phone},
  address=#{address},
  photo=#{photo}
  profile=#{profile}
  <if test="password != ''">
    , pwd=#{password}
  </if>
  where
  user_no=#{no}
  </update>

<update id="updateGrade">
  update users
    set grade=#{grade}
  where user_no = #{no}
</update>

<select id="findEmailByUserList" parameterType="java.util.List">
  select
    email
  from
    users
  where
    user_no in
  <foreach collection="userList" item="user" open="(" separator="," close=")">
    #{user}
  </foreach>
</select>
<update id="downGrade" parameterType="java.util.List">
  update
    users
  set
    grade = 0
  where
    user_no in
  <foreach collection="userList" item="user" open="(" separator="," close=")">
    #{user}
  </foreach>
</update>


<select id="findAllNoMaster">
  select
    user_no,
    name,
    grade,
    nickname,
    email,
    created_at,
    stop_date
  from
    users
  where
    grade &lt;= 3
  order by
    grade desc, created_at desc
  limit #{limit}
</select>

</mapper>