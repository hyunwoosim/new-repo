<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moyeora.myapp.dao.PostDao">


  <resultMap id="PostMap" type="Post">
  <id column="post_no" property="no"/>
  <result column="school_no" property="schoolNo"/>
  <result column="category_no" property="categoryNo"/>
  <result column="content" property="content"/>
  <result column="created_at" property="createdAt"/>

  <association property="User" javaType="User">
    <id column="user_no" property="no"/>
    <result column="name" property="name"/>
  </association>

<!--  <collection property="fileList" ofType="AttachedFile">-->
<!--    <id column="file_no" property="no"/>-->
<!--    <result column="file_path" property="filePath"/>-->
<!--    <result column="post_no" property="postNo"/>-->
<!--  </collection>-->
</resultMap>

  <insert id="add" parameterType="Post"
    useGeneratedKeys="true" keyColumn="post_no" keyProperty="no">
    insert into posts(content)
    values(#{schoolNo})
  </insert>

<!--카테고리 사용할 때 주석 풀 것-->
<!--    <insert id="add" parameterType="Post"-->
<!--    useGeneratedKeys="true" keyColumn="no" keyProperty="no">-->
<!--    insert into posts(school_no,user_no,category,created_at)-->
<!--    values(#{schoolNo},#{userNo.no},#{category},#{createdAt})-->
<!--  </insert>-->

  <delete id="delete" parameterType="int">
    delete from posts
    where no=#{value}
  </delete>

<!--  <select id="findAll" resultMap="PostMap">-->
<!--    select-->
<!--      p.no,-->
<!--      p.school_no,-->
<!--      p.user_no,-->
<!--      p.created_at,-->
<!--      u.user_no,-->
<!--      u.name-->
<!--    from-->
<!--      posts p left inner join users u on p.user_no = u.user_no-->
<!--    where-->
<!--      p.category=#{category}-->
<!--    order by-->
<!--      p.no desc-->
<!--    limit #{rowCount} offset #{offset}-->
<!--  </select>-->

  <select id="findBy" resultMap="PostMap" parameterType="int">
    select
      p.post_no,
      p.school_no,
      p.user_no,
      p.created_at
      u.user_no,
      u.name
    from
      posts p inner join user u on p.user_no = u.user_no
    where
      p.user_no=#{value}
  </select>

  <update id="update" parameterType="Post">
    update posts set
      content=#{content},
      category=#{category},
    where
      no=#{no}
  </update>

  <select id="countAll" resultType="int" parameterType="int">
    select count(*) from posts where category=#{value}
  </select>

  <select id="findAll" resultMap="PostMap">
    SELECT distinct
    u.name,
    p.post_no,
    p.school_no,
    p.user_no,
    p.content,
    p.created_at
FROM
    posts AS p
JOIN
    school_users AS su ON p.user_no = su.user_no
JOIN
    users AS u ON su.user_no = u.user_no;
  </select>
  
   <select id="findByPost" resultMap="PostMap" parameterType="String">
    select
    post_no,
    name,
    content
    from
    posts
    where name like '%${name}%'
  </select>

</mapper>