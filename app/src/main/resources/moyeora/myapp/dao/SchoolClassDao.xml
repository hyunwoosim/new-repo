<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="moyeora.myapp.dao.SchoolClassDao">
  <resultMap id="ClassMap" type="SchoolClass">
    <id column="class_no" property="no"/>
    <result column="user_no" property="userNo"/>
    <result column="school_no" property="schoolNo"/>
    <result column="name" property="name"/>
    <result column="content" property="content"/>
    <result column="location" property="location"/>
    <result column="start_at" property="startAt"/>
    <result column="created_at" property="createdAt"/>
    <result column="ended_at" property="endedAt"/>
    <result column="member" property="member"/>
    <result column="repeat_set" property="repeatSet"/>
    <result column="photo" property="photo"/>
    <result column="now_member_count" property="nowMemberCount"/>
    <result column="location_detail" property="locationDetail"/>



    <association property="user" javaType="User">
            <id column="user_no" property="no"/>
            <result column="nickname" property="nickname"/>
    </association>


    <association property="classUser" javaType="ClassUser">
                    <id column="class_no" property="classNo"/>
                    <result column="school_no" property="schoolNo"/>
                    <result column="user_no" property="userNo"/>
    </association>

    <association property="level" javaType="Level">
            <id column="level_no" property="levelNo"/>
            <result column="level_name" property="levelName"/>
    </association>


  </resultMap>





    <select id="findByDate" resultMap="ClassMap">
        select
        class_no,
        school_no,
        (select count(*) from class_users as u where c.class_no = u.class_no) as now_member_count,
        name,
        content,
        location,
        location_detail,
        start_at,
        member,
        photo
        from
        school_classes as c
        where
        date_format(start_at, '%Y-%m-%d') = '${date}'
        and location_detail like '%${str}%'
        order by start_at asc
    </select>

    <select id="findByWeek" resultMap="ClassMap">
            select
            class_no,
            school_no,
            (select count(*) from class_users as u where c.class_no = u.class_no) as now_member_count,
            name,
            content,
            location,
            location_detail,
            start_at,
            member,
            photo
            from
            school_classes as c
            where
            date_format(start_at, '%Y-%m-%d') in (${weekString})
            and location_detail like '%${address}%'
            order by start_at asc
    </select>

<insert id="add" parameterType="SchoolClass"
    useGeneratedKeys="true" keyColumn="class_no" keyProperty="no">
    insert into school_classes(school_no,user_no,name,content,location,start_at,created_at,ended_at,member,repeat_set,photo,location_detail)
    values(#{schoolNo},#{userNo},#{name},#{content},#{location},#{startAt},current_timestamp,#{endedAt},#{member},#{repeatSet},
    #{photo},#{locationDetail})
</insert>

<select id="calendarList" resultMap="ClassMap" parameterType="int">
    select
         class_no,
         school_no,
         name,
         start_at,
         ended_at,
         member,
         repeat_set
    from school_classes where school_no =#{schoolNo};
</select>



<select id="findBySchool" resultMap="ClassMap" parameterType="int">
    select * from school_classes where school_no =#{schoolNo};
</select>

<select id="findByNo" resultMap="ClassMap" parameterType="int">
SELECT
  sc.class_no,
  sc.school_no,
  sc.user_no,
  sc.name,
  sc.content,
  sc.location,
  sc.location_detail,
  sc.start_at,
  sc.ended_at,
  sc.photo,
  sc.member,
  (select count(*) from class_users as cu where cu.class_no = sc.class_no) AS now_member_count,
  u.nickname,
  su.level_no,
  l.name AS level_name
FROM
  school_classes AS sc
  INNER JOIN users AS u ON sc.user_no = u.user_no
  INNER JOIN school_users AS su ON sc.user_no = su.user_no AND sc.school_no = su.school_no
  INNER JOIN levels AS l ON su.level_no = l.level_no
WHERE
  sc.class_no = #{classNo}

</select>

<delete id="classDelete">
delete
from
    school_classes
where
    user_no = #{userNo}
    and
    class_no = #{classNo}

</delete>

    <delete id="deleteAllSchoolClass" parameterType="int">
        DELETE FROM school_classes WHERE school_no=#{value}
    </delete>

<update id="classUpdate">
update school_classes set
    school_no=#{schoolNo},
    name=#{name},
    start_at=#{startAt},
    ended_at=#{endedAt},
    content=#{content},
    photo=#{photo},
    location=#{location},
    location_detail=#{locationDetail}
where
    user_no = #{userNo}
    and
    class_no = #{no}
  </update>

    <delete id="deleteAllSchoolClassUser" parameterType="int">
        DELETE FROM class_users WHERE school_no=#{value}
    </delete>
</mapper>